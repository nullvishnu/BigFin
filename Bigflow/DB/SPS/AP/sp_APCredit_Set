CREATE DEFINER=`developer`@`%` PROCEDURE `sp_APCredit_Set`(in `Action` varchar(64),in `Type` varchar(64),
in `lj_Data` json,in `is_commit` char(1),in `li_create_by` int,in `li_entity_gid` int,
Out `Message` varchar(1024))
sp_APCredit_Set:BEGIN
# Ramesh May 21 2018

declare Query_Insert varchar(2000); 
declare Query_Update varchar(2000);
declare Query_column varchar(1000);
declare Query_value varchar(1000);
declare countRow int;
declare errno int;
declare msg varchar(1000);
declare i int;

DECLARE EXIT HANDLER FOR SQLEXCEPTION,sqlwarning
    BEGIN
    
    GET CURRENT DIAGNOSTICS CONDITION 1 errno = MYSQL_ERRNO, msg = MESSAGE_TEXT;
    set Message = concat(errno , msg);
    ROLLBACK;
    END;       
    
   # select lj_Data;
    select JSON_LENGTH(lj_Data,'$.CREDIT') into @li_json_count;
    
    if @li_json_count = 0 then
		 if @li_json_count is null or @li_json_count = 0 then
			set Message = 'No Data In Json - Credit.';            
			leave sp_APCredit_Set;
        end if;
    End if;
 set i = 0;

     WHILE i<= @li_json_count - 1 Do		
		 select JSON_UNQUOTE(JSON_EXTRACT(lj_Data, CONCAT('$.CREDIT[',i,'].Invoice_Header_Gid[0]'))) into @Invoice_Header_Gid;
         select JSON_UNQUOTE(JSON_EXTRACT(lj_Data, CONCAT('$.CREDIT[',i,'].Paymode_Gid[0]'))) into @Paymode_Gid;
         select JSON_UNQUOTE(JSON_EXTRACT(lj_Data, CONCAT('$.CREDIT[',i,'].Paymode_name[0]'))) into @Paymode_name;
         select JSON_UNQUOTE(JSON_EXTRACT(lj_Data, CONCAT('$.CREDIT[',i,'].GL_No[0]'))) into @GL_No;
         select JSON_UNQUOTE(JSON_EXTRACT(lj_Data, CONCAT('$.CREDIT[',i,'].Bank_Gid[0]'))) into @Bank_Gid;
         select JSON_UNQUOTE(JSON_EXTRACT(lj_Data, CONCAT('$.CREDIT[',i,'].Ref_No[0]'))) into @Ref_No;
         select JSON_UNQUOTE(JSON_EXTRACT(lj_Data, CONCAT('$.CREDIT[',i,'].Tax_Gid[0]'))) into @Tax_Gid;
         select JSON_UNQUOTE(JSON_EXTRACT(lj_Data, CONCAT('$.CREDIT[',i,'].Tax_Type[0]'))) into @Tax_Type;
         select JSON_UNQUOTE(JSON_EXTRACT(lj_Data, CONCAT('$.CREDIT[',i,'].Tax_Rate[0]'))) into @Tax_Rate;
         select JSON_UNQUOTE(JSON_EXTRACT(lj_Data, CONCAT('$.CREDIT[',i,'].TDS_Exempt[0]'))) into @TDS_Exempt;
         select JSON_UNQUOTE(JSON_EXTRACT(lj_Data, CONCAT('$.CREDIT[',i,'].Credit_Amount[0]'))) into @Credit_Amount;
         select JSON_UNQUOTE(JSON_EXTRACT(lj_Data, CONCAT('$.CREDIT[',i,'].ppx_headergid[0]'))) into @ppx_headergid_crd;
         
         select JSON_UNQUOTE(JSON_EXTRACT(lj_Data, CONCAT('$.CREDIT[',i,'].Credit_Gid[0]'))) into @Credit_Gid;
         select JSON_UNQUOTE(JSON_EXTRACT(lj_Data, CONCAT('$.CREDIT[',i,'].Is_due[0]'))) into @Is_due;
         select JSON_UNQUOTE(JSON_EXTRACT(lj_Data, CONCAT('$.CREDIT[',i,'].supplier_gid[0]'))) into @supplier_gid;
                  
if Action = 'Insert'  then
         
					set Query_Insert = '';
				### validate Json data
                select @Invoice_Header_Gid ,  @Paymode_Gid, @GL_No , @Bank_Gid ,
						 @Ref_No ,  @TDS_Exempt , @Credit_Amount ;
					if @Invoice_Header_Gid is null or  @Paymode_Gid is  null or @GL_No is null or @Bank_Gid is null
						or @Ref_No is null or  @TDS_Exempt is null or @Credit_Amount is null then
           
						set Message = 'Some Values Is Null In Credit Json Data.';
						leave sp_APCredit_Set;
					End if;
        
						set Query_column = '';
						set Query_value = '';
        
					if @Tax_Gid <> '' then
						set Query_column = concat(Query_column , ' credit_suppliertaxgid,');
						set Query_value = concat(Query_value , '''',@Tax_Gid,''',');
					else 
						set Query_column = concat(Query_column,'');
						set Query_value = concat(Query_value,'');
					end if;
      
					if @Tax_Type <> '' then
							set Query_column = concat(Query_column , ' credit_suppliertaxtype,');
							set Query_value = concat(Query_value , '''',@Tax_Type,''',');
					else 
							set Query_column = concat(Query_column,'');
							set Query_value = concat(Query_value,'');
					end if;  
      
					if @Tax_Rate <> '' then
							set Query_column = concat(Query_column , ' credit_suppliertaxtrate,');
							set Query_value = concat(Query_value , '''',@Tax_Rate,''',');
					else 
							set Query_column = concat(Query_column,'');
							set Query_value = concat(Query_value,'');
					end if;  
    
					set Query_Insert = concat('insert into ap_trn_tcredit(credit_invoiceheadergid,credit_paymodegid,credit_glno,
					credit_bankgid,credit_refno,
					credit_tdsexcempted,credit_amount, ',Query_column,'entity_gid,create_by)
					values(',@Invoice_Header_Gid,',',@Paymode_Gid,',''',@GL_No,''',',@Bank_Gid,',''',@Ref_No,''',
					''',@TDS_Exempt,''',''',@Credit_Amount,''',
					',Query_value,'',li_entity_gid,',',li_create_by,')'
					);     
                            
					set @Insert_query = Query_Insert;
					#SELECT @Insert_query; ##Remove it
					PREPARE stmt FROM @Insert_query;
					EXECUTE stmt;  
					set countRow = (select ROW_COUNT());
					DEALLOCATE PREPARE stmt; 	
                    
                    select LAST_INSERT_ID() into @li_credit_gid_Max ;
                    if @Paymode_Gid = 4 then
                        set @ppxjson = concat('{"DETAILS":[{"Invoice_Header_Gid":"',@Invoice_Header_Gid,'","Header_Gid":"',@ppx_headergid_crd,'",
                                                         "Credit_Gid":"',@li_credit_gid_Max,'","Adjusted":"',@Credit_Amount,'"}]}');
							
                        set @entity_ppx = concat('{"Entity_Gid":[',li_entity_gid,']}');    
                       
                        call sp_Ap_ppx_Set('Insert','INITIAL_DEATAILS','{}',@ppxjson,'{}',@entity_ppx,li_create_by,'N',@Message);
						select @Message into @Out_Message_ppx;
                        if  @Out_Message_ppx <> 'SUCCESS' then
									set Message = @Out_Message_ppx;
									rollback;
									leave sp_APCredit_Set;
						End if;
                     end if;
					
                     if  @Is_due = 'true' AND @Paymode_name = 'CRD' then
					    
                        set @lj_Recepit = '{}';         
						set @lj_Recepit = concat('{"RECEIPT":[{"Receipt_From":"SUPPLIER","Receipt_Date":"',curdate(),'","Receipt_VoucherType":"C",
                                                                "Receipt_Type":"Purchase AP","Receipt_RefTable_Gid":"',@supplier_gid,'","Receipt_REFName":"DUE_PAYMENT",
                                                                "Receipt_Amount":"',@Credit_Amount,'","Receipt_BalanceAmount":"',@Credit_Amount,'","Receipt_Remarks":""}]}');
					    set @lj_Classification = '{}';         
						set @lj_Classification = concat('{"Entity_Gid":"',li_entity_gid,'"}');         					 
													
						call sp_Receipt_Set('INSERT','INITIAL_SET',@lj_Recepit,'N',@lj_Classification,li_create_by,@Message1,@Message);
						select @Message;
                        if @Message is null then
							set Message = 'FAIL';
							leave sp_APCredit_Set;
                        end if;
                      end if;
                     
                
                
				if countRow >  0 then
					#select LAST_INSERT_ID() into Message ;
					set Message = 'SUCCESS';
					#commit;
				else
					set Message = 'FAIL';
                      leave sp_APCredit_Set;
					#rollback;
				end if;
    elseif Action = 'Update' then
					if @Credit_Gid is null or @Credit_Gid <=0 then
							set Message = 'Credit Gid Is Needed For Update.';
							leave sp_APCredit_Set;
					End if;
                    
					select JSON_UNQUOTE(JSON_EXTRACT(lj_Data, CONCAT('$.CREDIT[',i,'].Is_Update[0]'))) into @Is_Update;         
                    
                    if @Is_Update = 'Y' then
								set Query_Update = '';
                                set Query_Update = concat('update ap_trn_tcredit  set update_by = ',li_create_by,', ');
                                
                                if @Paymode_Gid is not null and @Paymode_Gid > 0 then
										set Query_Update = concat(Query_Update,'credit_paymodegid = ',@Paymode_Gid,', ');
                               End if;
                               
                               if @GL_No is not null and @GL_No <> ''  then
										set Query_Update = concat(Query_Update,'credit_glno = ''',@GL_No,''', ');
                               End if;                               
                               
                               if @Bank_Gid is not null and @Bank_Gid > 0 then
										set Query_Update = concat(Query_Update,'credit_bankgid = ',@Bank_Gid,', ');
                               End if;
                               
                               if @Ref_No is not null and @Ref_No > 0 then
										set Query_Update = concat(Query_Update,'credit_refno = ''',@Ref_No,''', ');
                               End if;
                               
                               if @Tax_Gid is not null and @Tax_Gid > 0 then
										set Query_Update = concat(Query_Update,'credit_suppliertaxgid = ',@Tax_Gid,', ');
                               End if;
                               
                               if @Tax_Type is not null and @Tax_Type <> '' then
										set Query_Update = concat(Query_Update,'credit_suppliertaxtype = ''',@Tax_Type,''', ');
                               End if;
                               
                               if @Tax_Rate is not null and @Tax_Rate > 0 then
										set Query_Update = concat(Query_Update,'credit_suppliertaxtrate = ''',@Tax_Rate,''', ');
                               End if;
                               
                               if @TDS_Exempt is not null and @TDS_Exempt > 0 then
										set Query_Update = concat(Query_Update,'credit_tdsexcempted = ''',@TDS_Exempt,''', ');
                               End if;
                               
                               if @Credit_Amount is not null and @Credit_Amount > 0 then
										set Query_Update = concat(Query_Update,'credit_amount = ''',@Credit_Amount,''', ');
                               End if;
                               
                              set Query_Update = concat(Query_Update,' Update_date = current_timestamp() ');
                              
                              set Query_Update = concat(Query_Update,' Where credit_gid = ',@Credit_Gid,' ');
                              
                                   set @Update_query = Query_Update;
								##SELECT @Update_query; ### remove It
								PREPARE stmt FROM @Update_query;
								EXECUTE stmt;  
								set countRow = (select ROW_COUNT());
								DEALLOCATE PREPARE stmt;
                                
                                	if countRow >  0 then							
										set Message = 'SUCCESS';
									else
										set Message = 'FAIL';                            
									end if;
                              
                    elseif @Is_Update = 'N' then
                          set Message = 'SUCCESS';
                          leave sp_APCredit_Set;
                   # else @Is_Update is null then
                     #     set Message = 'Error On Credit Update.';
                       #   leave sp_APCredit_Set;
                    End if;
                    
      
			
            
            
    End if;   #### End of Action
    
         
         
     set i = i + 1;
     END WHILE;

END
