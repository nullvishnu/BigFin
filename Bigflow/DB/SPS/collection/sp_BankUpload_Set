CREATE DEFINER=`root`@`%` PROCEDURE `sp_BankUpload_Set`(in ls_Action varchar(16),in ls_Type varchar(32),in lj_data json,in lj_file json,in lj_classification json,
                                      in li_create_by int,out Message varchar(1000))
sp_Bank_set:BEGIN
 #Prakash S  10-12-2018
 # Ramesh Edit Dec 13 2018,May 2019 , June 12 2019 : Tran Table
     declare Query_Insert varchar(1000);
     declare Query_Update varchar(9000);
     declare Query_column varchar(1000);
     declare Query_value varchar(1000);
     declare errno int;
     declare msg varchar(1000);
     declare i int;
     Declare j int;
     declare z int;
     Declare y int;
     Declare t int;
     declare vali_Date varchar(32);
     declare update_count int;
     declare countRow int;
     declare debit double(16,2);
     declare credit double(16,2);
     declare ld_Credit_Amount double(16,2) ;
     declare ld_Debit_Amount double (16,2) ;
	declare tempChequeNo varchar(16);
     # Null Selected Output
  DECLARE done INT DEFAULT 0;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
 #...
	 DECLARE EXIT HANDLER FOR SQLEXCEPTION,sqlwarning
     BEGIN

     GET CURRENT DIAGNOSTICS CONDITION 1 errno = MYSQL_ERRNO, msg = MESSAGE_TEXT;
     set Message = concat(errno , msg);
     ROLLBACK;
     END;
	 start transaction;
if ls_Action = 'Insert' and ls_Type='BankStatementAR' then  #AR-Account Resivables
       #select lj_data;
      select JSON_LENGTH(lj_data,'$.BANK_STMT') into @li_json_count_Stmt ;
          if @li_json_count_Stmt is null or @li_json_count_Stmt = 0 then
			  set Message = 'No Data In Json - data.';
              rollback;
			  leave sp_Bank_set;
          end if;
      # select @li_json_count_Stmt;
	   select JSON_LENGTH(lj_classification,'$')into @li_json_class_count;
		  if @li_json_class_count is null or @li_json_class_count =0 then
			   set message ='no classification In Json - classification';
			   rollback;
			   leave sp_Bank_set;
		   end if;

	   select JSON_LENGTH(lj_file,'$.FILE')into @li_json_File_count;
		  if @li_json_File_count is null or @li_json_File_count =0 then
			   set message ='no File In Json - file';
			   rollback;
			   leave sp_Bank_set;
		   end if;

          #select lj_file,lj_classification,lj_data;
          #edit 14-12-2018 ////////
     	    select JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.Bank_Gid[0]'))) into @bank_gid;
			select JSON_UNQUOTE(JSON_EXTRACT(lj_classification,CONCAT('$.Entity_Gid[0]'))) into @entity_gid;
			select JSON_UNQUOTE(JSON_EXTRACT(lj_file,CONCAT('$.FILE.File_Gid[0]'))) into @file_Id;
			select JSON_UNQUOTE(JSON_EXTRACT(lj_file,CONCAT('$.FILE.File_Name[0]'))) into @file_Name;
			select JSON_UNQUOTE(JSON_EXTRACT(lj_file,CONCAT('$.FILE.File_Path[0]'))) into @file_Path;


           call sp_File_Set('Insert','a',@file_Id,@file_Name,@file_Path,
                        lj_classification, '{}',li_create_by ,@Message);

			select @Message into @Out_msg_BankStmt;
            select  @Out_msg_BankStmt;
            SET @Out_msg_BankStmt_Message = (SELECT SPLIT_STR((@Out_msg_BankStmt), ',', 2));

				if @Out_msg_BankStmt_Message= 'SUCCESS' then
				  set @Out_msg_BankStmt_id = (SELECT SPLIT_STR((@Out_msg_BankStmt), ',', 1));
				  set @File_gid = @Out_msg_BankStmt_id;

				end if;
                #////////////////////////////
            #validation  14-12-2018 //////////////
        set j=0;
        while j<= @li_json_count_Stmt-1 do
					select JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.BANK_STMT[',j,'].Value_Date[0]'))) into @valuedate;
					set vali_Date = (SELECT DATE_FORMAT(current_date(), '%d-%m-%Y'));
								#SELECT DATE_FORMAT(current_date(), '%d-%d-%Y');
								if @valuedate = vali_Date then
									set Message = 'Today Date is Not Accepted ';
									rollback;
									leave sp_Bank_set;
								else
									set j=j+1;
								end if;
		end while;
        #/////////////////////////////
             if @bank_gid = ''  then
				 set Message = ' No Bank Gid';
				 leave sp_Bank_set;
			 end if;
             if @entity_gid = ''  then
                         set Message = ' No entity_gid data';
                         leave sp_Bank_set;
					 end if;

			  if @File_gid = ''  then
                         set Message = ' No file_gid Gid';
                         leave sp_Bank_set;
			  end if;

        set Query_column = '';
	    set Query_value = '';
        set i=0;

        while i <= @li_json_count_Stmt - 1 do


								select JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.BANK_STMT[',i,'].SNo[0]'))) into @slno;
								select JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.BANK_STMT[',i,'].Tran_Id[0]'))) into @tranid;
								select JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.BANK_STMT[',i,'].Value_Date[0]'))) into @valuedate;
								select JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.BANK_STMT[',i,'].Posted_Date[0]'))) into @posteddate;
								select JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.BANK_STMT[',i,'].Cheque_No[0]'))) into @chequeno;
								select JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.BANK_STMT[',i,'].Description[0]'))) into @description;
								select JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.BANK_STMT[',i,'].Transaction_Amount[0]'))) into @Transaction_Amount;
								select JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.BANK_STMT[',i,'].CR_DR[0]'))) into @CR_DR;
								select JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.BANK_STMT[',i,'].Status[0]'))) into @lj_status;
								select JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.BANK_STMT[',i,'].Balance_Amount[0]'))) into @balance;

								set ld_Debit_Amount = 0.00;
								set ld_Credit_Amount = 0.00;
                                /*select JSON_LENGTH(lj_data,'$.BANK_STMT') into @li_month_count_Stmt;
                                 drop temporary Table if exists MonthDate_Wise;
									create temporary table MonthDate_Wise (
									monthid   int,
									monthdate date
									);


								set i=0;
								while(i<@li_month_count_Stmt) do

								select JSON_UNQUOTE(JSON_EXTRACT(lj_data, CONCAT('$.BANK_STMT[i].Posted_Date[0]'))) into @Month2;
                                select JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.BANK_STMT[',i,']'))) into @monthdate1;
								#select JSON_UNQUOTE(JSON_EXTRACT(lj_filter, CONCAT('$.Month[',i,']'))) into @Month1;
								insert into MonthDate_Wise(monthid,monthdate) values(i+1,@monthdate1);
								set i=i+1;
								end while;
                                select * from MonthDate_Wise order by bankstmt_posteddate asc;*/


								#select @CR_DR ;
								#leave sp_Bank_set;

							   if @CR_DR = 'CR' then
										 set ld_Credit_Amount = @Transaction_Amount;
							   elseif @CR_DR = 'DR' then
										set ld_Debit_Amount = @Transaction_Amount;
							   else
							   select @CR_DR;
								  set Message = 'Invalid Credit -Debit Data.';
								  leave sp_Bank_set;
						   end if;

								# select @slno,@tranid,@valuedate,@posteddate,@chequeno,@description,@lj_debit,@lj_credit,@lj_status,@balance,@filegid;

							   set credit =ifnull(ld_Credit_Amount,'0.00');
							   set debit =ifnull(ld_Debit_Amount,'0.00');

										if @valuedate <> ''  then
												set @valuedate =  str_to_date(@valuedate,'%d-%m-%Y' );
										End if;

										if @posteddate <> ''  then
													set @posteddate = str_to_date(@posteddate,'%d-%m-%Y  %l:%i:%S %p '  );
										 End if;


								if exists (select 'true' from gal_trn_tbankstmt where  bankstmt_tranid=@tranid
																				  and bankstmt_valuedate=@valuedate
																				  and bankstmt_posteddate=@posteddate
																				  and bankstmt_chequeno=@chequeno
																				  and bankstmt_description=@description
																				  and (bankstmt_debit=ld_Debit_Amount
																				  or bankstmt_credit=ld_Credit_Amount)
																				  and bankstmt_balance=@balance
																				  and entity_gid=@entity_gid)  then

										   set Message = 'This Record Already Imported.';
										   #leave sp_Bank_set;
										   #bankstmt_bank_gid=@bank_gid

										   ## Temp Comment :: Give the Count

								 ##  and bankstmt_filegid=@File_gid
								 ## bankstmt_slno=@slno and
								 ## and bankstmt_status=@lj_status
								 else
										 #select 1;
										 if @slno = ''  then
											 set Message = ' No serial no ';
											 leave sp_Bank_set;
										 end if;

										  if @tranid = ''  then
											 set Message = ' No tranid ';
											 leave sp_Bank_set;
										 end if;

										 if @valuedate = ''  then
											 set Message = ' No value date';
											 leave sp_Bank_set;
										 end if;

										 if @posteddate = ''  then
											 set Message = ' No posted date';
											 leave sp_Bank_set;
										 end if;

										  if @chequeno = ''  then
											 set Message = ' No cheque number';
											 leave sp_Bank_set;
										 end if;

										 if @description = ''  then
											 set Message = ' No description data';
											 leave sp_Bank_set;
										 end if;

										set Query_column ='';
										set Query_value='';

											if  debit <> '' then
													set Query_column = concat(Query_column , 'bankstmt_debit,');
													set Query_value = concat(Query_value , '',debit,',');
											else
													set Query_column = concat(Query_column,'bankstmt_debit,');
													set Query_value = concat(Query_value,'',debit,',');

											end if;

											if credit <> ''  then
												set Query_column = concat(Query_column , 'bankstmt_credit,');
												set Query_value = concat(Query_value , '',credit,',');
											else
													set Query_column = concat(Query_column,'bankstmt_credit,');
													set Query_value = concat(Query_value,'',credit,',');
											end if;

										  if @balance = ''  then
											 set Message = ' No balance data';
											 leave sp_Bank_set;
										 end if;

										 if @lj_status = ''  then
											 set Message = ' No status data';
											 leave sp_Bank_set;
										 end if;

										 if li_create_by = ''  then
											 set Message = ' No create_by data';
											 leave sp_Bank_set;
										 end if;
										 #select @bank_gid,@File_gid,@slno,@tranid,@valuedate,@posteddate,@chequeno,@description,@balance,@lj_status,Query_value,@entity_gid,li_create_by,Query_column;
										 set Query_Insert = concat('INSERT INTO gal_trn_tbankstmt(bankstmt_bank_gid,bankstmt_filegid,
																   bankstmt_slno,bankstmt_tranid,bankstmt_valuedate,
																   bankstmt_posteddate,bankstmt_chequeno,bankstmt_description,
																  bankstmt_balance,bankstmt_status,
																   ',Query_column,'entity_gid,create_by) VALUES
																   (',@bank_gid,',',@File_gid,',',@slno,',''',@tranid,''',''',@valuedate,
																   ''',''',@posteddate,''',''',@chequeno,''',''',@description,''',',@balance,',''',@lj_status,''',',Query_value,'',
																  @entity_gid, ',',li_create_by, ')');

                                       #select * from gal_trn_tbankstmt order by bankstmt_posteddate asc;
                                      #select Query_Insert;
										set @Insert_query = Query_Insert;
										PREPARE stmt FROM @Insert_query;
										EXECUTE stmt;
										set countRow = (select ROW_COUNT());
										DEALLOCATE PREPARE stmt;


								 end if;

             	set i = i+1;
             end while;

                     if countRow >  0 then
						set Message = 'SUCCESS';

					else
						set Message = concat('FAIL ',Message);
						rollback;
					end if;

   commit;
end if;

if ls_Action = 'Update' and ls_Type = 'BANK_RECONCILE_MAPPING' then

        select JSON_LENGTH(lj_data,'$.BANK_STMT') into @li_JsonBank_Count;
			  if @li_JsonBank_Count is null or @li_JsonBank_Count = 0 then
				  set Message = 'No Data In Json - Data.';
				  rollback;
				  leave sp_Bank_set;
			  end if;

              select JSON_UNQUOTE(JSON_EXTRACT(lj_classification,CONCAT('$.Entity_Gid[0]'))) into @Entity_Gid;

              if @Entity_Gid is null or @Entity_Gid = 0 then
					set Message = 'Entity Gid Is Needed.';
                    leave sp_Bank_set;
              End if;

       #### Validatio of Dupliacte Map.
            ### TEMP TABLES
                             drop temporary Table if exists tTmp_BankreconAR;

						create temporary table tTmp_BankreconAR (
								tmp_brar_gid int,
                                tmp_brar_cltn int,
                                tmp_brar_bnk int,
                                tmp_brar_status varchar(32)
                        );
                        set sql_safe_updates = 0;
                        delete from tTmp_BankreconAR;
                    #### Temp Tables ENDS

              set z=0;
        While z <= @li_JsonBank_Count - 1 do
                 select JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.BANK_STMT[',z,'].CollectionHeader_Id[0]'))) into @CollectionHeader_Id_d;
				select JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.BANK_STMT[',z,'].Status[0]'))) into @ls_Status_d;
                    select JSON_LENGTH(lj_data,CONCAT('$.BANK_STMT[',z,'].Stmt_Id')) into @li_json_StmtGid_count_d;

                    set y = 0;
						 While y <= @li_json_StmtGid_count_d -1 do
									select  JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.BANK_STMT[',z,'].Stmt_Id[',y,']'))) into @Stmt_gid_d;

                                    #### Check The Record is Bounced ?
                                    set @tempChequeNo = 0 ;
                                    #select ExtractNumber(bankstmt_description) into @tempChequeNo  from gal_trn_tbankstmt where bankstmt_gid = @Stmt_gid_d;
                                    select (fetcollectionheader_chequeno * 1) into @tempChequeNo from fet_trn_tfetcollectionheader where fetcollectionheader_gid  =  @CollectionHeader_Id_d;
                                    set @tempChequeNo = concat('%',@tempChequeNo,'%');
                                         set tempChequeNo = concat('%',@tempChequeNo,'%');

                                    set @Bounce_Checking = 0 ;
							select ifnull(sum(a.bankstmt_gid),0) into @Bounce_Checking from gal_trn_tbankstmt as a
							 inner join gal_trn_tbankstmt as b on b.bankstmt_gid = (select c.bankstmt_gid from gal_trn_tbankstmt as c where c.bankstmt_debit = a.bankstmt_credit
							 and c.bankstmt_valuedate >= a.bankstmt_valuedate and c.bankstmt_isactive = 'Y'
                             and c.bankstmt_description like tempChequeNo   #### It Gives The Cheque  No
                             and c.bankstmt_description like '%REJECT%'
                             and c.bankstmt_isremoved = 'N' limit 1)
							 where  a.bankstmt_gid = @Stmt_gid_d and a.bankstmt_isactive = 'Y' and a.bankstmt_isremoved = 'N'
							 ;


                                 if @Bounce_Checking <> 0 and @ls_Status_d <> 'BOUNCED' then
										 set Message = 'REJECTED Data In Mapping Deteched, Check And Confirm Again.';
										 leave sp_Bank_set;
                                  elseif @ls_Status_d = 'BOUNCED' and @li_json_StmtGid_count_d <= 1 then ### Check the Correct Status Given or  not
										set Message = 'Matching Bounce Record Not Found,Error In Data.';
                                        leave sp_Bank_set;
                                 End if;

                                 ##### Validate Repeat of the record : Double Click.
                                 set @Check_BankStmt_Duplicate = 0 ;
                                 select ifnull(sum(bankstmt_gid),0) into @Check_BankStmt_Duplicate from gal_trn_tbankstmt
                                 where bankstmt_collectionheadergid is not null and bankstmt_gid = @Stmt_gid_d;

                                 if @Check_BankStmt_Duplicate <> 0 then
									 set Message = 'Error Occured, Mapped Data Again Mapping.';
                                     leave sp_Bank_set;
                                 End if;

								set y = y+1;
						   End while;

                       insert into tTmp_BankreconAR values(z,@CollectionHeader_Id_d,@Stmt_gid_d,@ls_Status_d);

            set z = z+1;
       End While;
							set @cltn_count = 0 ;
							select tmp_brar_cltn,count(*) as count_cltn into @cltn,@cltn_count from tTmp_BankreconAR group by tmp_brar_cltn having count_cltn >1 limit 1 ;

                           if cast(@cltn_count as decimal(16,2))  > 0 then
								set Message = 'Duplicate Collection Data Found.Data Not Mapped.';
                                leave sp_Bank_set;
                           End if;

        set i=0;
        While i <= @li_JsonBank_Count - 1 do

					select JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.BANK_STMT[',i,'].CollectionHeader_Id[0]'))) into @CollectionHeader_Id;
					select JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.BANK_STMT[',i,'].Status[0]'))) into @ls_Status;

                     select JSON_LENGTH(lj_data,CONCAT('$.BANK_STMT[',i,'].Stmt_Id')) into @li_json_StmtGid_count;

						if @li_json_StmtGid_count is null or @li_json_StmtGid_count = 0 then
								set Message = 'No Data In Json - Statement.';
								rollback;
								leave sp_Bank_set;
						end if;

                     set @Stmt_gid = 0;
                     set @Stmt_gids = 0;
                     set j = 0;
                     While j <= @li_json_StmtGid_count -1 do
								select  JSON_UNQUOTE(JSON_EXTRACT(lj_data,CONCAT('$.BANK_STMT[',i,'].Stmt_Id[',j,']'))) into @Stmt_gid;

                                if @Stmt_gid is not null or @Stmt_gid <> 0 then
										if @Stmt_gids = 0 then
												set @Stmt_gids = @Stmt_gid;
                                         else
												set @Stmt_gids = concat(@Stmt_gids,',',@Stmt_gid);
                                        End if;
                                End if;

                            set j = j+1;
                     END While;

                     if @Stmt_gids is null or @Stmt_gids = 0 then
							set Message = 'Error On Stament Gid Data.';
                            leave sp_Bank_set;
                     End if;

                    if @CollectionHeader_Id is null or @CollectionHeader_Id = 0 then
							set Message = 'Error On Collection Header Gid Data.';
                            leave sp_Bank_set;
                     End if;

                     if @ls_Status is null or @ls_Status = '' then
							set Message = 'Error On Status Data.';
                            leave sp_Bank_set;
                     End if;
                     ### New

                     if @ls_Status = 'CLEARED' or @ls_Status = 'BOUNCED' then
                           set @ok= 'ok';
                     else
							set Message = 'Invalid Status For Bank Statement Data';
                            leave sp_Bank_set;
                     End if;

                            #### Bank Part
                            #### in Gids is also for Data Bounced Scnerio.
                            set Query_Update = '';
                            set Query_Update = Concat('Update gal_trn_tbankstmt set  bankstmt_collectionheadergid =', @CollectionHeader_Id,','
																		' bankstmt_status = ''',@ls_Status,''',update_by = ''',li_create_by,''',Update_date = current_timestamp()
                                                                        where bankstmt_gid in (',@Stmt_gids,')'
																);

                        set @Query_Update = Query_Update;
                       #select Query_Update; ### Remove it
						PREPARE stmt FROM @Query_Update;
						EXECUTE stmt;
						set update_count = (select ROW_COUNT());
                        DEALLOCATE PREPARE stmt;

                        if update_count <=0 then
							set Message = 'FAIL In  Bank Update';
                            rollback;
                            leave sp_Bank_set;
                        End if;

                        ### Collection Part. Starts

                          set Query_Update = '';
                            set Query_Update = Concat('Update fet_trn_tfetcollectionheader set  fetcollectionheader_status = ''',@ls_Status,''',
																		fetcollectionheader_bankstmtgid = ',@Stmt_gid,',
																		update_by = ''',li_create_by,''',Update_date = current_timestamp()
                                                                        where fetcollectionheader_gid = ',@CollectionHeader_Id,' '
																);

						set @Query_Update = '';
                        set @Query_Update = Query_Update;
                       #select Query_Update; ### Remove it
						PREPARE stmt FROM @Query_Update;
						EXECUTE stmt;
						set update_count = (select ROW_COUNT());
                        DEALLOCATE PREPARE stmt;

						if update_count <=0 then
									set Message = 'FAIL IN  Collection Update';
									rollback;
									leave sp_Bank_set;
                        End if;
                        ### Collection Part Ends.

                        #### Tran Update.
										call sp_Trans_Set('Insert','COLLECTION_RECEIPT',@CollectionHeader_Id,@ls_Status,'I','CHECKER',
												'BANK STMT',@Entity_Gid,li_create_by,@message);
											select @message into @out_msg_tran ;

													if @out_msg_tran = 'FAIL' then
														set Message = 'Failed On Tran Update';
															rollback;
															leave sp_Bank_set;
													End if;

                        #### Update in Inv Receipt MAPP.

						if @ls_Status = 'CLEARED' then
									# For Bounce Status Not Update.
													Select ifnull(ref_gid,0)  into @REF_Gid  from gal_mst_tref where ref_name =  'COLLECTION_INVMAP' and ref_isremoved = 'N' ;

											if @REF_Gid is null or @REF_Gid = 0 then
														set Message = 'Problem In Getting Ref Data To Invoice Mapping.';
														rollback;
														leave sp_Bank_set;
											End if;

                                            ### Check wheather The Data Exists -- Before Update
														Select ifnull( count(invreceipt_gid),0) into @Inv_ReceiptMap
                                                        from gal_map_tinvreceipt where invreceipt_refgid = @REF_Gid and invreceipt_reftablegid = @CollectionHeader_Id ;

                                                        if @Inv_ReceiptMap <> 0 then
																	set Query_Update = '';
																	SET SQL_SAFE_UPDATES = 0;
																	set Query_Update = Concat('Update gal_map_tinvreceipt set  invreceipt_type = ''1'',
																								update_by = ''',li_create_by,''',Update_date = current_timestamp()
																							Where invreceipt_refgid = ',@REF_Gid,' and invreceipt_reftablegid = ',@CollectionHeader_Id,' '
																								);
                                                                                             # Update TAT -- The Cltn Was Cleared
																						set @Query_Update = '';
																						set @Query_Update = Query_Update;
																				        #select Query_Update; ### Remove it
																						PREPARE stmt FROM @Query_Update;
																						EXECUTE stmt;
																						set update_count = (select ROW_COUNT());
																						DEALLOCATE PREPARE stmt;

																								if update_count <=0 then
																											set Message = 'FAIL In Inv Mapping Update';
																											rollback;
																											leave sp_Bank_set;
																								End if;
                                                        End if;
                                            ####

                                            #### Update in Inv Receipt MAPP. ENDS
                                ##### Insert in Receipt . Starts.
											#set @Current_Date = DATE_FORMAT(curdate(),'%Y-%m-%d');
                                            select  DATE_FORMAT(bankstmt_valuedate,'%Y-%m-%d') into @Current_Date  from gal_trn_tbankstmt  where bankstmt_gid = @Stmt_gid ;
                                            Select fetcollectionheader_amount into @Collection_Amount from fet_trn_tfetcollectionheader where fetcollectionheader_gid = @CollectionHeader_Id
                                            and fetcollectionheader_isactive = 'Y' and fetcollectionheader_isremoved = 'N'  ;

												set @ls_Receipt_json = concat('{
															"RECEIPT":{
															"Receipt_From":"Customer",
															"Receipt_Date":   "',@Current_Date,'",
															"Receipt_VoucherType":"R",
															"Receipt_Type":"COLLECTION",
															"Receipt_REFName":"COLLECTION_RECEIPT",
															"Receipt_RefTable_Gid":"',@CollectionHeader_Id,'",
															"Receipt_Amount":"',@Collection_Amount,'",
															"Receipt_BalanceAmount":"',@Collection_Amount,'",
															"Receipt_Remarks":"RECEIPT"
														}
															}');
												call sp_Receipt_Set('INSERT','INITIAL_SET',
														@ls_Receipt_json, 'N',lj_classification,li_create_by,@Message,@lastid);
							                    select @Message;

											if @Message = 'SUCCESS' then
														set Message = 'SUCCESS';
                                                        set update_count = 1;
                                             else
														set Message = concat('FAIL',@Message);
                                                        rollback;
                                                        leave sp_Bank_set;
                                            End if;

                                ##### Insert In Receipt Ends



							End if;


				set i=i+1;

		End while;

                    if update_count >  0 then
						set Message = 'SUCCESS';
                        commit;
					else
						set Message = 'FAIL in Update';
						rollback;
					end if;
end if;

END